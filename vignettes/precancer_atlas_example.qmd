---
title: "precancer_atlas_example"
vignette: >
  %\VignetteIndexEntry{precancer_atlas_example}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
knitr:
  opts_chunk:
    collapse: true
    comment: '#>'
---

```{r}
#| label: setup
options(paged.print=FALSE)
```

```{r}
library(tidyverse)
```


```{r}
devtools::load_all(".")
# seu <- readRDS("~/Documents/Work_Projects/precancer-atlas-code/data/atlas_data/main_seurat_data.RDS")
seu <- readRDS("~/Documents/Work_Projects/precancer-atlas-code/data/atlas_data/CD4T_v2_18Feb2025.RDS")
meta_data <- readr::read_tsv("~/Documents/Work_Projects/precancer-atlas-code/data/atlas_data/meta_data.tsv.gz") |>
  left_join(readRDS("~/Documents/Work_Projects/precancer-atlas-code/data/atlas_data/all_treelabels.RDS"), by = "cell_id") |>
  dplyr::select(- starts_with("manual_cell_type"))

```


```{r}
# SeuratObject::Assays(seu)
# tmp <- seu[["RNA"]]
sce <- Seurat::as.SingleCellExperiment(seu)
SummarizedExperiment::colData(sce) <- SummarizedExperiment::colData(sce) |>
  as_tibble() |>
  left_join(meta_data, by = "cell_id") |>
  S4Vectors::DataFrame()
`%not_in%` <- Negate(`%in%`)
data_filter <- rlang::quo(disease_state %not_in% c("pre_non_malignant", "pre_virus") & cancer != "LIHC")
sel_cells <- sce$cell_id[rlang::eval_tidy(data_filter,  as_tibble(SummarizedExperiment::colData(sce)))]
sce <- sce[,which(sce$cell_id %in% sel_cells)]
rm(seu)
```

```{r}
# sce <- sce[,sce$cancer_type %in% c("LUAD", "BRCA", "LUSC", "PDAC")]
# sce <- sce[,sample.int(ncol(sce), size = 5000)]
```

```{r}
sce$stage <- as.factor(sce$stage)
spec <- init_shinyTreelabel(sce, 
                    treelabels = c("label_manual"),
                    design = \(dat){
                      if(length(unique(dat$cohort)) > 1) ~ stage + cohort
                      else ~ stage
                    }, 
                    pseudobulk_by = vars(donor), 
                    metaanalysis_over = "cancer",
                    gene_expr_by = "stage",
                    contrast = vars(cond(stage = "Pre") - cond(stage = "Normal"),
                                    cond(stage = "Tumor") - cond(stage = "Normal"),
                                    cond(stage = "Tumor") - cond(stage = "Pre")),
                    de_test = "limma")
system.time(
  precalc_res <- precalculate_results2(spec, sce, dbfile = "~/Downloads/result_cache/cd4.duckdb", output = c("da", "de", "de_meta"))
)
saveRDS(spec, "~/Downloads/result_cache/cd4-spec.RDS")
```




```{r}
run_shinyTreelabel(spec, precalc_results = "~/Downloads/result_cache/cd4.duckdb")
# run_shinyTreelabel(spec, sce, precalc_results = "~/Downloads/result_cache/cd4.duckdb")
```

